{"version":3,"sources":["login/login.component.js","login/login.service.js","common/footer/footer.component.js","common/header/header.component.js","common/utils/utils.service.js","customer/customer-details/customer-details.component.js","customer/customer-details/customer-details.service.js","customer/customer-add/customer-add.component.js","customer/customer-add/customer-add.service.js","customer/customer-list/customer-list.component.js","customer/customer-list/customer-list.service.js","customer/customer-summary/customer-summary.component.js","customer/customer-summary/customer-summary.service.js","app.js"],"names":["LoginController","loginService","$location","self","this","email","password","errorMessage","$onInit","login","then","response","path","err","data","LoginService","$http","post","FooterController","NavigationController","UtilsService","findById","a","id","i","length","CustomerDetailsController","customerDetailsService","$routeParams","customer","house","rooms","params","getCustomerDetails","getCustomerByID","getHomeDetails","getRooms","Error","message","callback","getHomeByCustomerId","homeID","getRoomsByHomeId","CustomerDetailsService","get","CustomerAddController","customerAddService","firstName","lastName","address","phoneNumber","home","totalSize","numStories","numBedrooms","numBathrooms","acType","heatingType","installationDate","room","size","numWindows","numStory","options","acTypes","heatTypes","clearCustomerInfoForm","clearHomeForm","clearRoomForm","addRoom","push","removeRoom","index","splice","setSessionForSummary","window","localStorage","clear","customerInfo","JSON","stringify","homeInfo","roomsInfo","CustomerAddService","CustomerListController","customerListService","customers","getCustomerList","viewCustomerDetails","addNewCustomer","CustomerListService","CustomerSummaryController","customerSummaryService","getInfoFromLocalStorage","save","saveCustomerInfo","parse","saveHouseInfo","error","console","log","customerId","reqObj","saveHomeInfo","CustomerSummaryService","angular","module","config","$routeProvider","when","template","component","templateUrl","controller","$inject","factory"],"mappings":"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","file":"bundle.js","sourcesContent":["angular\n    .module('main')\n    .component('login', {\n        templateUrl: 'views/login/login.template.html',\n        controller: LoginController\n    });\n\nLoginController.$inject = ['login.service', '$location'];\n\nfunction LoginController(loginService, $location) {\n    var self = this;\n\n    self.email = '';\n    self.password = '';\n    self.errorMessage = '';\n\n    self.$onInit = function () {\n    };\n\n    self.login = function () {\n        loginService.login(self.email, self.password)\n            .then(function (response) {\n                self.errorMessage = '';\n                $location.path('/customers');\n            }, function (err) {\n                self.email = '';\n                self.password = '';\n                self.errorMessage = err.data;\n            });\n    };\n}","angular\n  .module('main')\n  .factory('login.service', LoginService);\n\nLoginService.$inject = ['$http'];\n\nfunction LoginService($http) {\n\n  return {\n    login: login\n  };\n\n  function login(email, password) {\n    return $http.post('/api/user/authenticate', { email: email, password: password });\n  };\n}","\"use strict\"\n\nangular\n    .module('main')\n    .component('bottomNav', {\n        templateUrl: 'views/common/footer.template.html',\n        controller: FooterController\n    });\n\nFooterController.$inject = [];\n\nfunction FooterController() {\n    var self = this;\n\n}","\"use strict\"\n\nangular\n    .module('main')\n    .component('topNav', {\n        templateUrl: 'views/common/header.template.html'\n    });\n\nNavigationController.$inject = [];\n\nfunction NavigationController() {\n    var self = this;\n\n}","angular\n    .module('main')\n    .factory('utils.service', UtilsService)\n\nUtilsService.$inject = [];\n\nfunction UtilsService () {\n  return {\n    findById: function findById(a, id) {\n      for (var i = 0; i < a.length; i++) {\n        if (a[i].id == id) return a[i];\n      }\n      return null;\n    }\n  };\n};","angular\n    .module('main')\n    .component('customerDetails', {\n        templateUrl: 'views/customer/customer-details/customer-details.template.html',\n        controller: CustomerDetailsController\n    });\n\nCustomerDetailsController.$inject = ['customer-details.service', '$routeParams'];\n\nfunction CustomerDetailsController(customerDetailsService, $routeParams) {\n    var self = this;\n\n    self.customer = {};\n    self.house = {};\n    self.rooms = [];\n\n    self.params = $routeParams;\n\n    self.$onInit = function () {\n        if (self.params) {\n            getCustomerDetails(self.params.id);\n        }\n    };\n\n    var getCustomerDetails = function (id) {\n        customerDetailsService.getCustomerByID(id)\n            .then(function (response) {\n                self.customer = response.data;\n                getHomeDetails(self.customer.id, getRooms);\n            }, function (err) {\n                throw new Error(err.message);\n            });\n    };\n\n    var getHomeDetails = function (id, callback) {\n        customerDetailsService.getHomeByCustomerId(id)\n            .then(function (response) {\n                self.house = response.data;\n                callback(self.house.homeID);\n            }, function (err) {\n                throw new Error(err.message);\n            });\n    };\n\n    var getRooms = function (id) {\n        customerDetailsService.getRoomsByHomeId(id)\n            .then(function (response) {\n                self.rooms = response.data;\n            }, function (err) {\n                throw new Error(err.message);\n            });\n    }\n}","angular\n    .module('main')\n    .factory('customer-details.service', CustomerDetailsService);\n\nCustomerDetailsService.$inject = ['$http'];\n\nfunction CustomerDetailsService($http) {\n\n    return {\n        getCustomerByID: getCustomerByID,\n        getHomeByCustomerId: getHomeByCustomerId,\n        getRoomsByHomeId: getRoomsByHomeId\n    };\n\n    function getCustomerByID(id) {\n        return $http.get('/api/customer/' + id);\n    };\n\n    function getHomeByCustomerId(id) {\n        return $http.get('/api/house/' + id);\n    };\n\n    function getRoomsByHomeId(id) {\n        return $http.get('/api/house/' + id + '/rooms')\n    };\n};","angular\n    .module('main')\n    .component('customerAdd', {\n        templateUrl: 'views/customer/customer-add/customer-add.template.html',\n        controller: CustomerAddController\n    });\n\nCustomerAddController.$inject = ['customer-add.service', '$location'];\n\nfunction CustomerAddController(customerAddService, $location) {\n    var self = this;\n\n    self.customer = {\n        firstName: null,\n        lastName: null,\n        address: null,\n        phoneNumber: null,\n        email: null\n    };\n\n    self.home = {\n        totalSize: null,\n        numStories: null,\n        numBedrooms: null,\n        numBathrooms: null,\n        acType: null,\n        heatingType: null,\n        installationDate: null\n    };\n\n    self.room = {\n        size: null,\n        numWindows: null,\n        numStory: null\n    };\n\n    self.rooms = [];\n    self.options = [1, 2, 3, 4, 5, 6];\n    self.acTypes = ['Central Air', 'Window Unit', 'Mini Split', 'Other'];\n    self.heatTypes = ['Furnace', 'Boiler', 'Heat Pump', 'Gas', 'Other'];\n\n    self.clearCustomerInfoForm = function () {\n        self.customer.firstName = null;\n        self.customer.lastName = null;\n        self.customer.address = null;\n        self.customer.phoneNumber = null;\n        self.customer.email = null;\n    };\n\n    self.clearHomeForm = function () {\n        self.home.totalSize = null;\n        self.home.numStories = null;\n        self.home.numBedrooms = null;\n        self.home.numBathrooms = null;\n        self.home.acType = null;\n        self.home.heatingType = null;\n        self.home.installationDate = null;\n    };\n\n    self.clearRoomForm = function () {\n        self.room.size = null;\n        self.room.numWindows = null;\n        self.room.numStory = null;\n    };\n\n    self.addRoom = function (room) {\n\n        self.rooms.push({\n            size: room.size,\n            numWindows: room.numWindows,\n            numStory: room.numStory\n        });\n\n        self.clearRoomForm();\n    };\n\n    self.removeRoom = function (index) {\n        self.rooms.splice(index, 1);\n    };\n\n    self.setSessionForSummary = function () {\n        if (('localStorage' in window) && window.localStorage !== null) {\n            localStorage.clear();\n            localStorage.customerInfo = JSON.stringify(self.customer);\n            localStorage.homeInfo = JSON.stringify(self.home);\n            localStorage.roomsInfo = JSON.stringify(self.rooms);\n        }\n\n        $location.path('/customer/new/summary');\n    };\n}","angular\n    .module('main')\n    .factory('customer-add.service', CustomerAddService);\n\nCustomerAddService.$inject = ['$http'];\n\nfunction CustomerAddService($http) {\n\n    return {\n        //todo: possible have service methods to retrieve dropdown data & address validation-y things\n    };\n\n}","angular\n    .module('main')\n    .component('customerList', {\n        templateUrl: 'views/customer/customer-list/customer-list.template.html',\n        controller: CustomerListController\n    });\n\nCustomerListController.$inject = ['customer-list.service', '$location'];\n\nfunction CustomerListController(customerListService, $location) {\n    var self = this;\n\n    self.customers = [];\n\n    self.$onInit = function () {\n        customerListService.getCustomerList()\n            .then(function (response) {\n                self.customers = response.data;\n            }, function(err) {\n                throw new Error(err.message);\n            });\n    };\n\n    self.viewCustomerDetails = function (id) {\n        $location.path('/customer/' + id);\n    };\n\n    self.addNewCustomer = function () {\n        $location.path('/customer/new');\n    };\n};","angular\n    .module('main')\n    .factory('customer-list.service', CustomerListService);\n\nCustomerListService.$inject = ['$http'];\n\nfunction CustomerListService($http) {\n\n    return {\n        getCustomerList: getCustomerList\n    };\n\n    function getCustomerList() {\n        return $http.get('/api/customers');\n    };\n};","angular\n    .module('main')\n    .component('customerSummary', {\n        templateUrl: 'views/customer/customer-summary/customer-summary.template.html',\n        controller: CustomerSummaryController\n    });\n\nCustomerSummaryController.$inject = ['customer-summary.service', '$location'];\n\nfunction CustomerSummaryController(customerSummaryService, $location) {\n    var self = this;\n\n    self.customerInfo = {};\n    self.homeInfo = {};\n    self.rooms = [];\n\n    self.$onInit = function () {\n        getInfoFromLocalStorage();\n    };\n\n    self.save = function () {\n\n        saveCustomerInfo();\n        localStorage.clear();\n        $location.path('/customers');\n    };\n\n    var getInfoFromLocalStorage = function () {\n        if (('localStorage' in window) && window.localStorage !== null) {\n            if (localStorage.customerInfo) self.customerInfo = JSON.parse(localStorage.customerInfo);\n            if (localStorage.homeInfo) self.homeInfo = JSON.parse(localStorage.homeInfo);\n            if (localStorage.roomsInfo) self.rooms = JSON.parse(localStorage.roomsInfo);\n        }\n    };\n\n    var saveCustomerInfo = function () {\n        customerSummaryService.saveCustomerInfo(self.customerInfo)\n            .then(function (response) {\n                saveHouseInfo(response.data.id);\n            }, function (error) {\n                console.log(error);\n                throw new Error(error.message);\n            })\n\n    };\n\n    var saveHouseInfo = function (customerId) {\n\n        var reqObj = {\n            'customerId': customerId,\n            'homeInfo': self.homeInfo,\n            'roomsInfo': self.rooms\n        };\n\n        customerSummaryService.saveHomeInfo(reqObj)\n            .then(function (data) {\n\n            }, function (error) {\n                console.log(error);\n                throw new Error(error.message);\n            });\n\n    };\n}","angular\n    .module('main')\n    .factory('customer-summary.service', CustomerSummaryService);\n\nCustomerSummaryService.$inject = ['$http'];\n\nfunction CustomerSummaryService($http) {\n    \n    return {\n        saveHomeInfo: saveHomeInfo,\n        saveCustomerInfo: saveCustomerInfo\n    };\n    \n    function saveHomeInfo(data) {\n        return $http.post('/api/house/save', data);\n    };\n\n    function saveCustomerInfo (data) {\n        return $http.post('/api/customer/save', data);\n    };\n}","angular.module('main', ['ngMaterial', 'ngMessages', 'ngRoute'])\n    .config(function ($routeProvider) {\n        $routeProvider\n            .when('/', { template: '<login></login>' })\n            .when('/customers', { template: '<customer-list></customer-list>' })\n            .when('/customer/new', { template: '<customer-add></customer-add>' })\n            .when('/customer/new/summary', { template: '<customer-summary></customer-summary>' })\n            .when('/customer/:id', { template: '<customer-details></customer-details>' })\n    });"],"sourceRoot":"/source/"}