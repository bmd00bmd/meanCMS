{"version":3,"sources":["login/login.component.js","login/login.service.js","common/footer/footer.component.js","common/header/header.component.js","common/utils/utils.service.js","customer/customer-add/customer-add.component.js","customer/customer-add/customer-add.service.js","customer/customer-details/customer-details.component.js","customer/customer-details/customer-details.service.js","customer/customer-list/customer-list.component.js","customer/customer-list/customer-list.service.js","app.js"],"names":["LoginController","loginService","$location","self","this","email","password","errorMessage","$onInit","login","then","data","path","err","clear","LoginService","$http","factory","post","FooterController","NavigationController","UtilsService","findById","a","id","i","length","CustomerAddController","customerAddService","customer","firstName","lastName","address","phoneNumber","home","totalSize","numStories","numBedrooms","numBathrooms","acType","heatingType","installationDate","room","size","numWindows","numStory","options","acTypes","heatTypes","stories","CustomerAddService","CustomerDetailsController","customerDetailsService","$routeParams","house","params","getCustomerDetails","getHomeDetails","callback","getCustomerByID","homeID","error","Error","getHomeByCustomerHomeId","CustomerDetailsService","get","CustomerListController","customerListService","customers","getCustomerList","console","log","viewCustomerDetails","addNewCustomer","CustomerListService","angular","module","config","$routeProvider","when","template","component","templateUrl","controller","$inject"],"mappings":"AASA,QAAAA,iBAAAC,aAAAC,WACA,GAAAC,MAAAC,IAEAD,MAAAE,MAAA,GACAF,KAAAG,SAAA,GACAH,KAAAI,aAAA,GAEAJ,KAAAK,QAAA,aAGAL,KAAAM,MAAA,WACAR,aAAAQ,MAAAN,KAAAE,MAAAF,KAAAG,UACAI,KAAA,SAAAC,MACAR,KAAAI,aAAA,GACAL,UAAAU,KAAA,eACA,SAAAC,KACAV,KAAAI,aAAAM,IAAAF,QAIAR,KAAAW,MAAA,WACAX,KAAAE,MAAA,GACAF,KAAAG,SAAA,GACAH,KAAAI,aAAA,IC1BA,QAAAQ,cAAAC,OAEA,GAAAC,WAMA,OAJAA,SAAAR,MAAA,SAAAJ,MAAAC,UACA,MAAAU,OAAAE,KAAA,0BAAAb,MAAAA,MAAAC,SAAAA,YAGAW,QCHA,QAAAE,qBCDA,QAAAC,yBCJA,QAAAC,gBACA,OACAC,SAAA,SAAAC,EAAAC,IACA,IAAA,GAAAC,GAAA,EAAAA,EAAAF,EAAAG,OAAAD,IACA,GAAAF,EAAAE,GAAAD,IAAAA,GAAA,MAAAD,GAAAE,EAEA,OAAA,QCHA,QAAAE,uBAAAC,oBACA,GAAAzB,MAAAC,IAEAD,MAAA0B,UACAC,UAAA,GACAC,SAAA,GACAC,QAAA,GACAC,YAAA,GACA5B,MAAA,IAGAF,KAAA+B,MACAC,UAAA,EACAC,WAAA,EACAC,YAAA,EACAC,aAAA,EACAC,OAAA,GACAC,YAAA,GACAC,iBAAA,MAGAtC,KAAAuC,MACAC,KAAA,EACAC,WAAA,EACAC,SAAA,EAIA1C,MAAA2C,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA3C,KAAA4C,SAAA,cAAA,cAAA,aAAA,SACA5C,KAAA6C,WAAA,UAAA,SAAA,YAAA,MAAA,SAEA7C,KAAA8C,SAAA9C,KAAA+B,KAAAE,YCnCA,QAAAc,oBAAAlC,OACA,GAAAC,WAEA,OAAAA,SCAA,QAAAkC,2BAAAC,uBAAAC,cACA,GAAAlD,MAAAC,IAEAD,MAAA0B,YACA1B,KAAAmD,SACAnD,KAAAoD,OAAAF,aAEAlD,KAAAK,QAAA,WACAL,KAAAoD,QACAC,mBAAArD,KAAAoD,OAAA/B,GAAAiC,gBAIA,IAAAD,oBAAA,SAAAhC,GAAAkC,UACAN,uBAAAO,gBAAAnC,IACAd,KAAA,SAAAC,MACAR,KAAA0B,SAAAlB,KAAAA,KACA+C,SAAAvD,KAAA0B,SAAA+B,SACA,SAAAC,OACA,KAAA,IAAAC,OAAAD,UAIAJ,eAAA,SAAAjC,IACA4B,uBAAAW,wBAAAvC,IACAd,KAAA,SAAAC,MACAR,KAAAmD,MAAA3C,KAAAA,MACA,SAAAE,KACA,KAAA,IAAAiD,OAAAjD,QC/BA,QAAAmD,wBAAAhD,OACA,GAAAC,WAQA,OANAA,SAAA0C,gBAAA,SAAAnC,IACA,MAAAR,OAAAiD,IAAA,iBAAAzC,KAEAP,QAAA8C,wBAAA,SAAAvC,IACA,MAAAR,OAAAiD,IAAA,cAAAzC,KAEAP,QCNA,QAAAiD,wBAAAC,oBAAAjE,WACA,GAAAC,MAAAC,IAEAD,MAAAiE,aAEAjE,KAAAK,QAAA,WACA2D,oBAAAE,kBACA3D,KAAA,SAAAC,MACA2D,QAAAC,IAAA5D,MACAR,KAAAiE,UAAAzD,KAAAA,MACA,SAAAE,KACA,KAAA,IAAAiD,OAAAjD,QAIAV,KAAAqE,oBAAA,SAAAhD,IACAtB,UAAAU,KAAA,aAAAY,KAGArB,KAAAsE,eAAA,WACAvE,UAAAU,KAAA,kBCvBA,QAAA8D,qBAAA1D,OACA,GAAAC,WAMA,OAJAA,SAAAoD,gBAAA,WACA,MAAArD,OAAAiD,IAAA,mBAGAhD,QCbA0D,QAAAC,OAAA,QAAA,aAAA,aAAA,YACAC,QAAA,iBAAA,SAAAC,gBACAA,eACAC,KAAA,KAAAC,SAAA,oBACAD,KAAA,cAAAC,SAAA,oCACAD,KAAA,iBAAAC,SAAA,kCACAD,KAAA,iBAAAC,SAAA,6CXNAL,QACAC,OAAA,QACAK,UAAA,SACAC,YAAA,kCACAC,WAAAnF,kBAGAA,gBAAAoF,SAAA,gBAAA,aCPAT,QACAC,OAAA,QACA3D,QAAA,gBAAAF,cAEAA,aAAAqE,SAAA,SCFAT,QACAC,OAAA,QACAK,UAAA,aACAC,YAAA,oCACAC,WAAAhE,mBAGAA,iBAAAiE,WCPAT,QACAC,OAAA,QACAK,UAAA,UACAC,YAAA,sCAGA9D,qBAAAgE,WCRAT,QACAC,OAAA,QACA3D,QAAA,gBAAAI,cAEAA,aAAA+D,WCJAT,QACAC,OAAA,QACAK,UAAA,eACAC,YAAA,yDACAC,WAAAxD,wBAGAA,sBAAAyD,SAAA,wBCPAT,QACAC,OAAA,QACA3D,QAAA,uBAAAiC,oBAEAA,mBAAAkC,SAAA,SCJAT,QACAC,OAAA,QACAK,UAAA,mBACAC,YAAA,iEACAC,WAAAhC,4BAGAA,0BAAAiC,SAAA,2BAAA,gBCPAT,QACAC,OAAA,QACA3D,QAAA,2BAAA+C,wBAEAA,uBAAAoB,SAAA,SCJAT,QACAC,OAAA,QACAK,UAAA,gBACAC,YAAA,2DACAC,WAAAjB,yBAGAA,uBAAAkB,SAAA,wBAAA,aCPAT,QACAC,OAAA,QACA3D,QAAA,wBAAAyD,qBAEAA,oBAAAU,SAAA","file":"bundle.js","sourcesContent":["angular\n    .module('main')\n    .component('login', {\n        templateUrl: 'views/login/login.template.html',\n        controller: LoginController\n    });\n\nLoginController.$inject = ['login.service', '$location'];\n\nfunction LoginController(loginService, $location) {\n    var self = this;\n\n    self.email = '';\n    self.password = '';\n    self.errorMessage = '';\n\n    self.$onInit = function () {\n    };\n\n    self.login = function () {\n        loginService.login(self.email, self.password)\n            .then(function (data) {\n                self.errorMessage = '';\n                $location.path('/customers');\n            }, function (err) {\n                self.errorMessage = err.data;\n            });\n    }\n\n    self.clear = function () {\n        self.email = '';\n        self.password = '';\n        self.errorMessage = '';\n    }\n}","angular\n    .module('main')\n    .factory('login.service', LoginService);\n\nLoginService.$inject = ['$http'];\n\nfunction LoginService($http) {\n\n  var factory = {};\n\n  factory.login = function (email, password) {\n    return $http.post('/api/user/authenticate', {email: email, password: password});\n  };\n\n  return factory;\n};","\"use strict\"\n\nangular\n    .module('main')\n    .component('bottomNav', {\n        templateUrl: 'views/common/footer.template.html',\n        controller: FooterController\n    });\n\nFooterController.$inject = [];\n\nfunction FooterController() {\n    var self = this;\n\n}","\"use strict\"\n\nangular\n    .module('main')\n    .component('topNav', {\n        templateUrl: 'views/common/header.template.html'\n    });\n\nNavigationController.$inject = [];\n\nfunction NavigationController() {\n    var self = this;\n\n}","angular\n    .module('main')\n    .factory('utils.service', UtilsService)\n\nUtilsService.$inject = [];\n\nfunction UtilsService () {\n  return {\n    findById: function findById(a, id) {\n      for (var i = 0; i < a.length; i++) {\n        if (a[i].id == id) return a[i];\n      }\n      return null;\n    }\n  };\n};","angular\n    .module('main')\n    .component('customerAdd', {\n        templateUrl: 'views/customer/customer-add/customer-add.template.html',\n        controller: CustomerAddController\n    });\n\nCustomerAddController.$inject = ['customer-add.service'];\n\nfunction CustomerAddController(customerAddService) {\n    var self = this;\n\n    self.customer = {\n        firstName: '',\n        lastName: '',\n        address: '',\n        phoneNumber: '',\n        email: ''\n    };\n\n    self.home = {\n        totalSize: 0,\n        numStories: 0,\n        numBedrooms: 0,\n        numBathrooms: 0,\n        acType: '',\n        heatingType: '',\n        installationDate: null\n    };\n\n    self.room = {\n        size: 0,\n        numWindows: 0,\n        numStory: 0\n    };\n\n    var rooms = [];\n    self.options = [1,2,3,4,5,6];\n    self.acTypes = ['Central Air', 'Window Unit', 'Mini Split', 'Other'];\n    self.heatTypes = ['Furnace', 'Boiler', 'Heat Pump', 'Gas', 'Other'];\n\n    self.stories = [self.home.numStories];\n}","angular\n    .module('main')\n    .factory('customer-add.service', CustomerAddService);\n\nCustomerAddService.$inject = ['$http'];\n\nfunction CustomerAddService($http) {\n    var factory = {};\n\n    return factory;\n}","angular\n    .module('main')\n    .component('customerDetails', {\n        templateUrl: 'views/customer/customer-details/customer-details.template.html',\n        controller: CustomerDetailsController\n    });\n\nCustomerDetailsController.$inject = ['customer-details.service', '$routeParams'];\n\nfunction CustomerDetailsController(customerDetailsService, $routeParams) {\n    var self = this;\n\n    self.customer = {};\n    self.house = {};\n    self.params = $routeParams;\n\n    self.$onInit = function () {\n        if (self.params) {\n            getCustomerDetails(self.params.id, getHomeDetails);\n        }\n    }\n\n    var getCustomerDetails = function (id, callback) {\n        customerDetailsService.getCustomerByID(id)\n            .then(function (data) {\n                self.customer = data.data;\n                callback(self.customer.homeID);\n            }, function (error) {\n                throw new Error(error);\n            });\n    }\n\n    var getHomeDetails = function (id) {\n        customerDetailsService.getHomeByCustomerHomeId(id)\n            .then(function (data) {\n                self.house = data.data;\n            }, function (err) {\n                throw new Error(err);\n            })\n    }\n}","angular\n    .module('main')\n    .factory('customer-details.service', CustomerDetailsService);\n\nCustomerDetailsService.$inject = ['$http'];\n\nfunction CustomerDetailsService($http) {\n    var factory = {};\n\n    factory.getCustomerByID = function(id) {\n        return $http.get('/api/customer/' + id);\n    }\n    factory.getHomeByCustomerHomeId = function(id) {\n        return $http.get('/api/house/' + id);\n    }\n    return factory;\n};","angular\n    .module('main')\n    .component('customerList', {\n        templateUrl: 'views/customer/customer-list/customer-list.template.html',\n        controller: CustomerListController\n    });\n\nCustomerListController.$inject = ['customer-list.service', '$location'];\n\nfunction CustomerListController(customerListService, $location) {\n    var self = this;\n\n    self.customers = [];\n\n    self.$onInit = function () {\n        customerListService.getCustomerList()\n            .then(function (data) {\n                console.log(data);\n                self.customers = data.data;\n            }, function(err) {\n                throw new Error(err);\n            });\n    };\n\n    self.viewCustomerDetails = function (id) {\n        $location.path('/customer/' + id);\n    };\n\n    self.addNewCustomer = function () {\n        $location.path('/customer/new');\n    }\n\n\n};","angular\n    .module('main')\n    .factory('customer-list.service', CustomerListService);\n\nCustomerListService.$inject = ['$http'];\n\nfunction CustomerListService($http) {\n    var factory = {};\n\n    factory.getCustomerList = function() {\n        return $http.get('/api/customers');\n    }\n\n    return factory;\n};","angular.module('main', ['ngMaterial', 'ngMessages', 'ngRoute'])\n    .config(function($routeProvider) {\n        $routeProvider\n            .when('/', { template: '<login></login>' })\n            .when('/customers', { template: '<customer-list></customer-list>' })\n            .when('/customer/new', { template: '<customer-add></customer-add>'})\n            .when('/customer/:id', { template: '<customer-details></customer-details>'})\n        });"],"sourceRoot":"/source/"}