{"version":3,"sources":["login/login.component.js","login/login.service.js","common/footer/footer.component.js","common/header/header.component.js","common/utils/utils.service.js","customer/customer-add/customer-add.component.js","customer/customer-add/customer-add.service.js","customer/customer-details/customer-details.component.js","customer/customer-details/customer-details.service.js","customer/customer-list/customer-list.component.js","customer/customer-list/customer-list.service.js","customer/customer-summary/customer-summary.component.js","customer/customer-summary/customer-summary.service.js","app.js"],"names":["LoginController","loginService","$location","self","this","email","password","errorMessage","$onInit","login","then","path","err","data","LoginService","$http","post","FooterController","NavigationController","UtilsService","findById","a","id","i","length","CustomerAddController","customerAddService","customer","firstName","lastName","address","phoneNumber","home","totalSize","numStories","numBedrooms","numBathrooms","acType","heatingType","installationDate","room","size","numWindows","numStory","rooms","options","acTypes","heatTypes","clearCustomerInfoForm","clearHomeForm","clearRoomForm","addRoom","push","removeRoom","index","splice","setSessionForSummary","window","localStorage","clear","customerInfo","JSON","stringify","homeInfo","roomsInfo","CustomerAddService","CustomerDetailsController","customerDetailsService","$routeParams","house","params","getCustomerDetails","getCustomerByID","response","getHomeDetails","getRooms","Error","message","callback","getHomeByCustomerId","homeID","getRoomsByHomeId","CustomerDetailsService","get","CustomerListController","customerListService","customers","getCustomerList","viewCustomerDetails","addNewCustomer","CustomerListService","CustomerSummaryController","customerSummaryService","$mdToast","getInfoFromLocalStorage","save","saveCustomerInfo","parse","saveHouseInfo","error","console","log","customerId","reqObj","saveHomeInfo","CustomerSummaryService","angular","module","config","$routeProvider","when","template","component","templateUrl","controller","$inject","factory"],"mappings":"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","file":"bundle.js","sourcesContent":["angular\n    .module(\"main\")\n    .component(\"login\", {\n        templateUrl: \"views/login/login.template.html\",\n        controller: LoginController\n    });\n\nLoginController.$inject = [\"login.service\", \"$location\"];\n\nfunction LoginController(loginService, $location) {\n    var self = this;\n\n    self.email = \"\";\n    self.password = \"\";\n    self.errorMessage = \"\";\n\n    self.$onInit = function () {\n    };\n\n    self.login = function () {\n        loginService.login(self.email, self.password)\n            .then(function () {\n                self.errorMessage = \"\";\n                $location.path(\"/customers\");\n            }, function (err) {\n                self.email = \"\";\n                self.password = \"\";\n                self.errorMessage = err.data;\n            });\n    };\n}","angular\n  .module(\"main\")\n  .factory(\"login.service\", LoginService);\n\nLoginService.$inject = [\"$http\"];\n\nfunction LoginService($http) {\n\n  return {\n    login: login\n  };\n\n  function login(email, password) {\n    return $http.post(\"/api/user/authenticate\", { email: email, password: password });\n  };\n}","\"use strict\"\n\nangular\n    .module(\"main\")\n    .component(\"bottomNav\", {\n        templateUrl: \"views/common/footer.template.html\",\n        controller: FooterController\n    });\n\nFooterController.$inject = [];\n\nfunction FooterController() {\n}","\"use strict\"\n\nangular\n    .module(\"main\")\n    .component(\"topNav\", {\n        templateUrl: \"views/common/header.template.html\"\n    });\n\nNavigationController.$inject = [];\n\nfunction NavigationController() {\n}","angular\n    .module(\"main\")\n    .factory(\"utils.service\", UtilsService)\n\nUtilsService.$inject = [];\n\nfunction UtilsService () {\n  return {\n    findById: function findById(a, id) {\n      for (var i = 0; i < a.length; i++) {\n        if (a[i].id == id) return a[i];\n      }\n      return null;\n    }\n  };\n};","angular\n    .module(\"main\")\n    .component(\"customerAdd\", {\n        templateUrl: \"views/customer/customer-add/customer-add.template.html\",\n        controller: CustomerAddController\n    });\n\nCustomerAddController.$inject = [\"customer-add.service\", \"$location\"];\n\nfunction CustomerAddController(customerAddService, $location) {\n    var self = this;\n\n    self.customer = {\n        firstName: null,\n        lastName: null,\n        address: null,\n        phoneNumber: null,\n        email: null\n    };\n\n    self.home = {\n        totalSize: null,\n        numStories: null,\n        numBedrooms: null,\n        numBathrooms: null,\n        acType: null,\n        heatingType: null,\n        installationDate: null\n    };\n\n    self.room = {\n        size: null,\n        numWindows: null,\n        numStory: null\n    };\n\n    self.rooms = [];\n    self.options = [1, 2, 3, 4, 5, 6];\n    self.acTypes = [\"Central Air\", \"Window Unit\", \"Mini Split\", \"Other\"];\n    self.heatTypes = [\"Furnace\", \"Boiler\", \"Heat Pump\", \"Gas\", \"Other\"];\n\n    self.clearCustomerInfoForm = function () {\n        self.customer.firstName = null;\n        self.customer.lastName = null;\n        self.customer.address = null;\n        self.customer.phoneNumber = null;\n        self.customer.email = null;\n    };\n\n    self.clearHomeForm = function () {\n        self.home.totalSize = null;\n        self.home.numStories = null;\n        self.home.numBedrooms = null;\n        self.home.numBathrooms = null;\n        self.home.acType = null;\n        self.home.heatingType = null;\n        self.home.installationDate = null;\n    };\n\n    self.clearRoomForm = function () {\n        self.room.size = null;\n        self.room.numWindows = null;\n        self.room.numStory = null;\n    };\n\n    self.addRoom = function (room) {\n\n        self.rooms.push({\n            size: room.size,\n            numWindows: room.numWindows,\n            numStory: room.numStory\n        });\n\n        self.clearRoomForm();\n    };\n\n    self.removeRoom = function (index) {\n        self.rooms.splice(index, 1);\n    };\n\n    self.setSessionForSummary = function () {\n        if ((\"localStorage\" in window) && window.localStorage !== null) {\n            localStorage.clear();\n            localStorage.customerInfo = JSON.stringify(self.customer);\n            localStorage.homeInfo = JSON.stringify(self.home);\n            localStorage.roomsInfo = JSON.stringify(self.rooms);\n        }\n\n        $location.path(\"/customer/new/summary\");\n    };\n}","angular\n    .module(\"main\")\n    .factory(\"customer-add.service\", CustomerAddService);\n\nCustomerAddService.$inject = [\"$http\"];\n\nfunction CustomerAddService($http) {\n\n    return {\n        //todo: possible have service methods to retrieve dropdown data & address validation-y things\n    };\n\n}","angular\n    .module(\"main\")\n    .component(\"customerDetails\", {\n        templateUrl: \"views/customer/customer-details/customer-details.template.html\",\n        controller: CustomerDetailsController\n    });\n\nCustomerDetailsController.$inject = [\"customer-details.service\", \"$routeParams\"];\n\nfunction CustomerDetailsController(customerDetailsService, $routeParams) {\n    var self = this;\n\n    self.customer = {};\n    self.house = {};\n    self.rooms = [];\n\n    self.params = $routeParams;\n\n    self.$onInit = function () {\n        if (self.params) {\n            getCustomerDetails(self.params.id);\n        }\n    };\n\n    var getCustomerDetails = function (id) {\n        customerDetailsService.getCustomerByID(id)\n            .then(function (response) {\n                self.customer = response.data;\n                getHomeDetails(self.customer.id, getRooms);\n            }, function (err) {\n                throw new Error(err.message);\n            });\n    };\n\n    var getHomeDetails = function (id, callback) {\n        customerDetailsService.getHomeByCustomerId(id)\n            .then(function (response) {\n                self.house = response.data;\n                callback(self.house.homeID);\n            }, function (err) {\n                throw new Error(err.message);\n            });\n    };\n\n    var getRooms = function (id) {\n        customerDetailsService.getRoomsByHomeId(id)\n            .then(function (response) {\n                self.rooms = response.data;\n            }, function (err) {\n                throw new Error(err.message);\n            });\n    }\n}","angular\n    .module(\"main\")\n    .factory(\"customer-details.service\", CustomerDetailsService);\n\nCustomerDetailsService.$inject = [\"$http\"];\n\nfunction CustomerDetailsService($http) {\n\n    return {\n        getCustomerByID: getCustomerByID,\n        getHomeByCustomerId: getHomeByCustomerId,\n        getRoomsByHomeId: getRoomsByHomeId\n    };\n\n    function getCustomerByID(id) {\n        return $http.get(\"/api/customer/\" + id);\n    };\n\n    function getHomeByCustomerId(id) {\n        return $http.get(\"/api/house/\" + id);\n    };\n\n    function getRoomsByHomeId(id) {\n        return $http.get(\"/api/house/\" + id + \"/rooms\")\n    };\n};","angular\n    .module(\"main\")\n    .component(\"customerList\", {\n        templateUrl: \"views/customer/customer-list/customer-list.template.html\",\n        controller: CustomerListController\n    });\n\nCustomerListController.$inject = [\"customer-list.service\", \"$location\"];\n\nfunction CustomerListController(customerListService, $location) {\n    var self = this;\n\n    self.customers = [];\n\n    self.$onInit = function () {\n        customerListService.getCustomerList()\n            .then(function (response) {\n                self.customers = response.data;\n            }, function(err) {\n                throw new Error(err.message);\n            });\n    };\n\n    self.viewCustomerDetails = function (id) {\n        $location.path(\"/customer/\" + id);\n    };\n\n    self.addNewCustomer = function () {\n        $location.path(\"/customer/new\");\n    };\n};","angular\n    .module(\"main\")\n    .factory(\"customer-list.service\", CustomerListService);\n\nCustomerListService.$inject = [\"$http\"];\n\nfunction CustomerListService($http) {\n\n    return {\n        getCustomerList: getCustomerList\n    };\n\n    function getCustomerList() {\n        return $http.get(\"/api/customers\");\n    };\n};","angular\n    .module(\"main\")\n    .component(\"customerSummary\", {\n        templateUrl: \"views/customer/customer-summary/customer-summary.template.html\",\n        controller: CustomerSummaryController\n    });\n\nCustomerSummaryController.$inject = [\"customer-summary.service\", \"$location\"];\n\nfunction CustomerSummaryController(customerSummaryService, $location, $mdToast) {\n    var self = this;\n\n    self.customerInfo = {};\n    self.homeInfo = {};\n    self.rooms = [];\n\n    self.$onInit = function () {\n        getInfoFromLocalStorage();\n    };\n\n    self.save = function () {\n        saveCustomerInfo();\n        localStorage.clear();\n        $location.path(\"/customers\");\n    };\n\n    var getInfoFromLocalStorage = function () {\n        if ((\"localStorage\" in window) && window.localStorage !== null) {\n            if (localStorage.customerInfo) self.customerInfo = JSON.parse(localStorage.customerInfo);\n            if (localStorage.homeInfo) self.homeInfo = JSON.parse(localStorage.homeInfo);\n            if (localStorage.roomsInfo) self.rooms = JSON.parse(localStorage.roomsInfo);\n        }\n    };\n\n    var saveCustomerInfo = function () {\n        customerSummaryService.saveCustomerInfo(self.customerInfo)\n            .then(function (response) {\n                saveHouseInfo(response.data.id);\n            }, function (error) {\n                console.log(error);\n                throw new Error(error.message);\n            })\n\n    };\n\n    var saveHouseInfo = function (customerId) {\n\n        var reqObj = {\n            \"customerId\": customerId,\n            \"homeInfo\": self.homeInfo,\n            \"roomsInfo\": self.rooms\n        };\n\n        customerSummaryService.saveHomeInfo(reqObj)\n            .then(function (data) {\n            }, function (error) {\n                console.log(error);\n                throw new Error(error.message);\n            });\n    };\n}","angular\n    .module(\"main\")\n    .factory(\"customer-summary.service\", CustomerSummaryService);\n\nCustomerSummaryService.$inject = [\"$http\"];\n\nfunction CustomerSummaryService($http) {\n\n    return {\n        saveHomeInfo: saveHomeInfo,\n        saveCustomerInfo: saveCustomerInfo\n    };\n\n    function saveHomeInfo(data) {\n        return $http.post(\"/api/house/save\", data);\n    };\n\n    function saveCustomerInfo (data) {\n        return $http.post(\"/api/customer/save\", data);\n    };\n}","angular.module(\"main\", [\"ngMaterial\", \"ngMessages\", \"ngRoute\"])\n    .config(function ($routeProvider) {\n        $routeProvider\n            .when(\"/\", { template: \"<login></login>\" })\n            .when(\"/customers\", { template: \"<customer-list></customer-list>\" })\n            .when(\"/customer/new\", { template: \"<customer-add></customer-add>\" })\n            .when(\"/customer/new/summary\", { template: \"<customer-summary></customer-summary>\" })\n            .when(\"/customer/:id\", { template: \"<customer-details></customer-details>\" })\n    });"],"sourceRoot":"/source/"}